name: auto-push-collection

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install aiohttp
        
    - name: Create python file
      run: |
        cat > addons.py << EOF
        import asyncio, aiohttp, json
        async def getaddons(url):
            async with aiohttp.ClientSession() as session:
                async with session.get(url=url) as req:
                    resp = await req.json()
                page_count = resp["page_count"]
                addons = []
                for i in range(len(resp["results"])):
                    addon = {}
                    data = resp["results"][i]
                    for ii in range(len(data["authors"])):
                        data["authors"][ii]["id"] = ""
                        data["authors"][ii]["url"] = ""
                        data["authors"][ii]["username"] = ""
                    addon["authors"] = ""
                    addon["current_version"] = {
                        "files": [{
                            "id": data["current_version"]["file"]["id"],
                            "permissions": data["current_version"]["file"]["permissions"],
                            "url": data["current_version"]["file"]["url"]
                        }],
                        "version": data["current_version"]["version"]
                    }
                    addon["guid"] = data["guid"]
                    addon["categories"] = None
                    addon["created"] = None
                    addon["default_locale"] = data["default_locale"]
                    addon["description"] = None
                    addon["icon_url"] = data["icon_url"]
                    addon["last_updated"] = data["last_updated"]
                    addon["name"] = {data["default_locale"]: data["name"][data["default_locale"]]}
                    addon["ratings"] = {
                        "average": data["ratings"]["average"],
                        "count": data["ratings"]["count"]
                    }
                    addon["summary"] = None
                    addon["url"] = None
                    addons = addons + [{"addon": addon}]
                results = {}
                results["results"] = addons
                return page_count, results
        async def main():
            url = "https://addons.mozilla.org/api/v5/addons/search/?page=1&page_size=50&sort=users&type=extension"
            page_count, addons = await getaddons(url)
            addon = addons["results"]
            if page_count > 1:
                for page in range(2, page_count + 1):
                    url = "https://addons.mozilla.org/api/v5/addons/search/?page=" + str(page) + "&page_size=50&sort=users&type=extension"
                    resp = await getaddons(url)
                    addon = addon + resp[1]["results"]
            addons["results"] = addon
            addons = json.dumps(addons)
            with open("addons.json","w") as f:
                f.write(addons)
        asyncio.get_event_loop().run_until_complete(main())
        EOF
        
    - name: Run python file
      run: |
        python addons.py
        
    - uses: actions/upload-artifact@v2
      with:
          name: file
          path: addons.json
    - name: Upload armv8 release  
      uses: svenstaro/upload-release-action@v2  
      with:             
         repo_token: ${{ secrets.ACTION_TOKEN }}  
         file: ./addons.json           
         tag: "continous"          
         body: "Automatic CI builds"
         file_glob: true           
         prerelease: true             
         overwrite: true   
